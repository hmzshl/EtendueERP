@using EtendueERP.Models.SageAPI
@using Microsoft.EntityFrameworkCore
@using Data
@inject Radzen.DialogService DialogService
@using AntDesign
@using Newtonsoft.Json


<Collapse>
    <Panel Header="Filtrer" Key="1">
            <GridRow>
                <GridCol Xs="24" Md="24">
                    <FormItem Label="Recherche">
                        <Input @bind-Value="@text" />
                    </FormItem>
                </GridCol>
                <GridCol Xs="20" Md="20">
                    
                </GridCol>
                <GridCol Xs="24" Md="24">
                    
                </GridCol>
            </GridRow>
    </Panel>
</Collapse>
@if (@items == null)
{
<div class="spin-center">
    <Spin size="large" />
</div>
}
else
{
      <RadzenDataGrid RowSelect="@DataGridRowSelect" AllowFiltering="false" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" AllowPaging="true" PageSize="@Page" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@items" TItem="API_V_DOCLIGNE" LogicalFilterOperator="LogicalFilterOperator.Or" Style="font-size: 9px; font-weight: normal; font-family: Arial; min-height: 350px;" PagerAlwaysVisible="true" AllowColumnReorder="false" Responsive="true"
                AllowColumnPicking="true" PageSizeText="élément par page" PagingSummaryFormat="Page {0}/{1} ({2} élément)" ColumnsShowingText="colonnes">
                    <Columns>

            <RadzenDataGridColumn FormatString="{0:d}" TItem="API_V_DOCLIGNE" Property="DO_Date" Title="Date"  Visible="@DODate"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="DO_Piece" Title="Piéce"  Visible="@DOPiece"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="DomaineIntitule" Title="Domaine"  Visible="@DomaineIntitule"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="TypeIntitule" Title="Type"  Visible="@TypeIntitule"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="DL_PieceBL" Title="Numéro BL"  Visible="@DLPieceBL"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:d}" TItem="API_V_DOCLIGNE" Property="DL_DateBL" Title="Date BL"  Visible="@DLDateBL"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="CT_Num" Title="N° Tiers"  Visible="@CTNum"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="CT_Intitule" Title="Intitule"  Visible="@CTIntitule"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="DE_Intitule" Title="Dépot"  Visible="@DEIntitule"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="AR_Ref" Title="Référence"  Visible="@ARRef"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="DL_Design" Title="Designation"  Visible="@DLDesign"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="EU_Enumere" Title="Unité"  Visible="@EUEnumere"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="DL_CodeTaxe1" Title="Code Taxe"  Visible="@DLCodeTaxe1"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="DL_Taxe1" Title="Taux Taxe"  Visible="@DLTaxe1"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="DL_Qte" Title="Qté"  Visible="@DLQte"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="QteMvt" Title="Qté"  Visible="@QteMvt"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="DL_PrixUnitaire" Title="P.U"  Visible="@DLPrixUnitaire"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="Remise" Title="Remise"  Visible="@Remise"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="PUNet" Title="PU Net"  Visible="@PUNet"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="PUTTC" Title="PU TTC"  Visible="@PUTTC"></RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="DL_MontantHT" Title="Montant HT"  Visible="@DLMontantHT">
                <FooterTemplate>
                    <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:N2}", items.Sum(a => a.DL_MontantHT))</b>
                </FooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="MontantTVA" Title="Montant TVA"  Visible="@MontantTVA">
                <FooterTemplate>
                    <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:N2}", items.Sum(a => a.MontantTVA))</b>
                </FooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn FormatString="{0:N2}" TextAlign="Radzen.TextAlign.Right" TItem="API_V_DOCLIGNE" Property="DL_MontantTTC" Title="Montant TTC"  Visible="@DLMontantTTC">
                <FooterTemplate>
                    <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:N2}", items.Sum(a => a.DL_MontantTTC))</b>
                </FooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="CA_Num" Title="N° Affaire"  Visible="@CANum"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="CA_Intitule" Title="Intitulé Affaire"  Visible="@CAIntitule"></RadzenDataGridColumn>            
            <RadzenDataGridColumn TItem="API_V_DOCLIGNE" Property="CO_Nom" Title="Collaborateur"  Visible="@CONom"></RadzenDataGridColumn>
            
            
            
            
            
            
            
        </Columns>
    </RadzenDataGrid>

}



@code
{

    //Parameters
    [Parameter] public ICollection<API_V_DOCLIGNE> data { get; set; }
    [Parameter] public bool DODate { get; set; } = true;
    [Parameter] public bool DOPiece { get; set; } = true;
    [Parameter] public bool ARRef { get; set; } = true;
    [Parameter] public bool DLDesign { get; set; } = true;
    [Parameter] public bool DLPieceBL { get; set; } = true;
    [Parameter] public bool DLDateBL { get; set; } = true;
    [Parameter] public bool DLQte { get; set; } = true;
    [Parameter] public bool QteMvt { get; set; } = false;
    [Parameter] public bool DLPrixUnitaire { get; set; } = true;
    [Parameter] public bool DLMontantHT { get; set; } = true;
    [Parameter] public bool DLMontantTTC { get; set; } = true;
    [Parameter] public bool CTIntitule { get; set; } = true;
    [Parameter] public bool CTNum { get; set; } = true;
    [Parameter] public bool CANum { get; set; } = false;
    [Parameter] public bool CAIntitule { get; set; } = false;
    [Parameter] public bool DEIntitule { get; set; } = true;
    [Parameter] public bool DomaineIntitule { get; set; } = false;
    [Parameter] public bool TypeIntitule { get; set; } = false;
    [Parameter] public bool DLTaxe1 { get; set; } = false;
    [Parameter] public bool DLCodeTaxe1 { get; set; } = true;
    [Parameter] public bool PUTTC { get; set; } = true;
    [Parameter] public bool MontantTVA { get; set; } = true;
    [Parameter] public bool EUEnumere { get; set; } = true;
    [Parameter] public bool PUNet { get; set; } = true;
    [Parameter] public bool Remise { get; set; } = true;
    [Parameter] public bool CONom { get; set; } = false;
    [Parameter] public int DO_Type { get; set; } = -1;
    [Parameter] public int DO_Domaine { get; set; } = -1;
    [Parameter] public int DE_No { get; set; } = -1;
    [Parameter] public int CO_No { get; set; } = -1;
    [Parameter] public string CT_Num { get; set; } = "";
    [Parameter] public string AR_Ref { get; set; } = "";
    [Parameter] public string DO_Piece { get; set; } = "";
    [Parameter] public int Page { get; set; } = 20;
    [Parameter] public int Height { get; set; } = 350;
    [Parameter] public int Width { get; set; } = 1000;
    [Parameter] public bool? IsStock { get; set; }

    //End Parameters

    string text;


    SageAPIContext db = new SageAPIContext();
    private ICollection<API_V_DOCLIGNE> items;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(LoadData);
    }
    private void LoadData()
    {
        System.Threading.Thread.Sleep(1000);

        if (data == null)
        {
            if(CT_Num != "" || AR_Ref != "" || DE_No != -1 || DO_Type != -1 || DO_Domaine != -1 || CO_No != -1) 
            {

                if(CT_Num != "") 
                {
                    data = db.API_V_DOCLIGNE.Where(a => a.CT_Num == CT_Num).ToList();
                }
                else if(AR_Ref != "") 
                {
                    data = db.API_V_DOCLIGNE.Where(a => a.AR_Ref == AR_Ref).ToList();
                }
                else if (DO_Piece != "")
                {
                    data = db.API_V_DOCLIGNE.Where(a => a.DO_Piece == DO_Piece).ToList();
                }
                else if(DE_No != -1) 
                {
                    data = db.API_V_DOCLIGNE.Where(a => a.DE_No == DE_No).ToList();
                }
                else if(CO_No != -1) 
                {
                    data = db.API_V_DOCLIGNE.Where(a => a.CO_No == CO_No).ToList();
                }
                else if(DO_Type != -1) 
                {
                    data = db.API_V_DOCLIGNE.Where(a => a.DO_Type == DO_Type).ToList();
                }
                else if(DO_Domaine != -1) 
                {
                    data = db.API_V_DOCLIGNE.Where(a => a.DO_Domaine == DO_Domaine).ToList();
                }

                DataFilter();

            }

            else 
            {
                data = db.API_V_DOCLIGNE.ToList();
            }

        }
        items = data;
    }



    void OnInput(string value)
    {
        //items = data.ToList();
    }
    protected async Task DataGridRowSelect(API_V_DOCLIGNE args)
    {

    }
    private void DataFilter()
    {
        if (CT_Num != "")
        {
            data = data.Where(a => a.CT_Num == CT_Num).ToList();
        }
        if (AR_Ref != "" && data != null)
        {
            data = data.Where(a => a.AR_Ref == AR_Ref).ToList();
        }
        if (DE_No != -1 && data != null)
        {
            data = data.Where(a => a.DE_No == DE_No).ToList();
        }
        if (DO_Type != -1 && data != null)
        {
            data = data.Where(a => a.DO_Type == DO_Type).ToList();
        }
        if (DO_Domaine != -1 && data != null)
        {
            data = data.Where(a => a.DO_Domaine == DO_Domaine).ToList();
        }
        if (CO_No != -1 && data != null)
        {
            data = data.Where(a => a.CO_No == CO_No).ToList();
        }
        if(IsStock != null) 
        {
            data = data.Where(a => a.IsStock == (IsStock??true)).ToList();
        }
    }



}