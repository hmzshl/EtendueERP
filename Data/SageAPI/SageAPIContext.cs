// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using EtendueERP.Models.SageAPI;

namespace EtendueERP.Data.SageAPI
{
    public partial class SageAPIContext : DbContext
    {
        public SageAPIContext()
        {
        }

        public SageAPIContext(DbContextOptions<SageAPIContext> options)
            : base(options)
        {
        }

        public virtual DbSet<API_V_ARTICLE> API_V_ARTICLE { get; set; }
        public virtual DbSet<API_V_COMPTET> API_V_COMPTET { get; set; }
        public virtual DbSet<API_V_DOCENTETE> API_V_DOCENTETE { get; set; }
        public virtual DbSet<API_V_DOCLIGNE> API_V_DOCLIGNE { get; set; }
        public virtual DbSet<API_V_TOPMVT> API_V_TOPMVT { get; set; }
        public virtual DbSet<F_ABOENTETE> F_ABOENTETE { get; set; }
        public virtual DbSet<F_ARTCLIENT> F_ARTCLIENT { get; set; }
        public virtual DbSet<F_ARTCOMPO> F_ARTCOMPO { get; set; }
        public virtual DbSet<F_ARTCOMPTA> F_ARTCOMPTA { get; set; }
        public virtual DbSet<F_ARTENUMREF> F_ARTENUMREF { get; set; }
        public virtual DbSet<F_ARTFOURNISS> F_ARTFOURNISS { get; set; }
        public virtual DbSet<F_ARTGAMME> F_ARTGAMME { get; set; }
        public virtual DbSet<F_ARTICLE> F_ARTICLE { get; set; }
        public virtual DbSet<F_ARTPRIX> F_ARTPRIX { get; set; }
        public virtual DbSet<F_ARTSTOCK> F_ARTSTOCK { get; set; }
        public virtual DbSet<F_ARTSTOCKEMPL> F_ARTSTOCKEMPL { get; set; }
        public virtual DbSet<F_BANQUE> F_BANQUE { get; set; }
        public virtual DbSet<F_BANQUET> F_BANQUET { get; set; }
        public virtual DbSet<F_CAISSE> F_CAISSE { get; set; }
        public virtual DbSet<F_CATALOGUE> F_CATALOGUE { get; set; }
        public virtual DbSet<F_COLLABORATEUR> F_COLLABORATEUR { get; set; }
        public virtual DbSet<F_COMPTEA> F_COMPTEA { get; set; }
        public virtual DbSet<F_COMPTEG> F_COMPTEG { get; set; }
        public virtual DbSet<F_COMPTEGA> F_COMPTEGA { get; set; }
        public virtual DbSet<F_COMPTER> F_COMPTER { get; set; }
        public virtual DbSet<F_COMPTET> F_COMPTET { get; set; }
        public virtual DbSet<F_COMPTETG> F_COMPTETG { get; set; }
        public virtual DbSet<F_CONTACTT> F_CONTACTT { get; set; }
        public virtual DbSet<F_CREGLEMENT> F_CREGLEMENT { get; set; }
        public virtual DbSet<F_DEPOT> F_DEPOT { get; set; }
        public virtual DbSet<F_DEPOTCONTACT> F_DEPOTCONTACT { get; set; }
        public virtual DbSet<F_DEPOTEMPL> F_DEPOTEMPL { get; set; }
        public virtual DbSet<F_DEPOTUSER> F_DEPOTUSER { get; set; }
        public virtual DbSet<F_DOCCURRENTPIECE> F_DOCCURRENTPIECE { get; set; }
        public virtual DbSet<F_DOCENTETE> F_DOCENTETE { get; set; }
        public virtual DbSet<F_DOCLIGNE> F_DOCLIGNE { get; set; }
        public virtual DbSet<F_DOCLIGNEEMPL> F_DOCLIGNEEMPL { get; set; }
        public virtual DbSet<F_DOCREGL> F_DOCREGL { get; set; }
        public virtual DbSet<F_EBANQUE> F_EBANQUE { get; set; }
        public virtual DbSet<F_ECRITUREA> F_ECRITUREA { get; set; }
        public virtual DbSet<F_ECRITUREC> F_ECRITUREC { get; set; }
        public virtual DbSet<F_ECRITUREF> F_ECRITUREF { get; set; }
        public virtual DbSet<F_ECRITURER> F_ECRITURER { get; set; }
        public virtual DbSet<F_ENUMCOND> F_ENUMCOND { get; set; }
        public virtual DbSet<F_ENUMGAMME> F_ENUMGAMME { get; set; }
        public virtual DbSet<F_FAMCLIENT> F_FAMCLIENT { get; set; }
        public virtual DbSet<F_FAMCOMPTA> F_FAMCOMPTA { get; set; }
        public virtual DbSet<F_FAMFOURNISS> F_FAMFOURNISS { get; set; }
        public virtual DbSet<F_FAMILLE> F_FAMILLE { get; set; }
        public virtual DbSet<F_FAMTARIF> F_FAMTARIF { get; set; }
        public virtual DbSet<F_GAMSTOCK> F_GAMSTOCK { get; set; }
        public virtual DbSet<F_GAMSTOCKEMPL> F_GAMSTOCKEMPL { get; set; }
        public virtual DbSet<F_JMOUV> F_JMOUV { get; set; }
        public virtual DbSet<F_JOURNAUX> F_JOURNAUX { get; set; }
        public virtual DbSet<F_JOURNAUXA> F_JOURNAUXA { get; set; }
        public virtual DbSet<F_LIVRAISON> F_LIVRAISON { get; set; }
        public virtual DbSet<F_LOTFIFO> F_LOTFIFO { get; set; }
        public virtual DbSet<F_LOTSERIE> F_LOTSERIE { get; set; }
        public virtual DbSet<F_NOMENCLAT> F_NOMENCLAT { get; set; }
        public virtual DbSet<F_PAYS> F_PAYS { get; set; }
        public virtual DbSet<F_PIECE> F_PIECE { get; set; }
        public virtual DbSet<F_PIECEA> F_PIECEA { get; set; }
        public virtual DbSet<F_PIECEG> F_PIECEG { get; set; }
        public virtual DbSet<F_PROTECTIONCIAL> F_PROTECTIONCIAL { get; set; }
        public virtual DbSet<F_PROTECTIONCPTA> F_PROTECTIONCPTA { get; set; }
        public virtual DbSet<F_REGLEARCHIVE> F_REGLEARCHIVE { get; set; }
        public virtual DbSet<F_REGLECH> F_REGLECH { get; set; }
        public virtual DbSet<F_REGLEMENTT> F_REGLEMENTT { get; set; }
        public virtual DbSet<F_TARIF> F_TARIF { get; set; }
        public virtual DbSet<F_TAXE> F_TAXE { get; set; }
        public virtual DbSet<P_CATCOMPTA> P_CATCOMPTA { get; set; }
        public virtual DbSet<P_DOSSIER> P_DOSSIER { get; set; }
        public virtual DbSet<P_DOSSIERCIAL> P_DOSSIERCIAL { get; set; }
        public virtual DbSet<P_GAMME> P_GAMME { get; set; }
        public virtual DbSet<P_INTERNE> P_INTERNE { get; set; }
        public virtual DbSet<P_TIERS> P_TIERS { get; set; }
        public virtual DbSet<P_UNITE> P_UNITE { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=feedipet.com;Initial Catalog=SageAPI;Persist Security Info=True;User ID=sa;Password=azer12TY");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("French_CI_AS");

            modelBuilder.Entity<API_V_ARTICLE>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("API_V_ARTICLE");

                entity.Property(e => e.AR_CodeBarre)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_CodeFiscal)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Coef).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_CoefNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_CoutStd).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Design)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_EdiCode)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais01FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais01FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais01FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais01FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais02FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais03FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Langue1)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Langue2)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_PUNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Photo)
                    .HasMaxLength(259)
                    .IsUnicode(false);

                entity.Property(e => e.AR_PoidsBrut).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PoidsNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixAch).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixAchNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixVen).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixVenNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_QteComp).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_QteOperatoire).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat01)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat02)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat03)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat04)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat05)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Substitut)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AS_MontSto).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.AS_QteSto).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.CL_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CL_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DL_DateBL_Achat).HasColumnType("datetime");

                entity.Property(e => e.DL_DateBL_Vente).HasColumnType("datetime");

                entity.Property(e => e.DL_Dernier_MontantHT_Achat).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_Dernier_MontantHT_Vente).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_Dernier_MontantTTC_Achat).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_Dernier_MontantTTC_Vente).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_Dernier_Qte_Achat).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_Dernier_Qte_Vente).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_MontantHT_Achat).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_MontantHT_Vente).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_MontantTTC_Achat).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_MontantTTC_Vente).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_PU_Achat).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PU_Vente).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Qte_Achat).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_Qte_Vente).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.EtatStock)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.FA_CodeFamille)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.FR_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.FR_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.RP_CodeDefaut)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.SommeilIntitule)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SuiviStockIntitule)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.U_Intitule)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<API_V_COMPTET>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("API_V_COMPTET");

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CA_NumIFRS)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumPrinc)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Ape)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Assurance).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Classement)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CT_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Coface)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Commentaire)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CT_EdiCode)
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.CT_EdiCodeSage)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Encours).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Identifiant)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_LangueISO2)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCentrale)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeur)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Qualite)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CT_RepresentInt)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_RepresentNIF)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Siret)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Site)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique01)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique02)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique03)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique04)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique05)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique06)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique07)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique08)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique09)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique10)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvCA).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_SvCotation)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvEffectif)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvFormeJuri)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvObjetMaj)
                    .HasMaxLength(61)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvRegul)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvResultat).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux01).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux02).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux03).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux04).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Controle)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DL_DateBL).HasColumnType("datetime");

                entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.EtatSolde)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.RG_Montant).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.SoldeCommercial).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.SoldeComptable).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.SommeilIntitule)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Taux).HasColumnType("numeric(38, 6)");
            });

            modelBuilder.Entity<API_V_DOCENTETE>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("API_V_DOCENTETE");

                entity.Property(e => e.CA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CA_NumIFRS)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Nom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCentrale)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeur)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_MontantTVA).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DO_CodeTaxe1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_CodeTaxe2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_CodeTaxe3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord01)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord02)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord03)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord04)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Cours).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Date).HasColumnType("datetime");

                entity.Property(e => e.DO_DateExpedition).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivrRealisee).HasColumnType("datetime");

                entity.Property(e => e.DO_DebutAbo).HasColumnType("datetime");

                entity.Property(e => e.DO_DebutPeriod).HasColumnType("datetime");

                entity.Property(e => e.DO_Ecart).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_FactureFrs)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DO_FinAbo).HasColumnType("datetime");

                entity.Property(e => e.DO_FinPeriod).HasColumnType("datetime");

                entity.Property(e => e.DO_Heure)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DO_Motif)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.DO_NoWeb)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Piece)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DO_PieceOrig)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Ref)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Taxe1).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Taxe2).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Taxe3).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Tiers)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_TotalHT).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_TxEscompte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_ValFrais).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_ValFranco).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DomaineIntitule)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.EtatReglement)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.RC_Montant).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Reste).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TF_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.TypeIntitule)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<API_V_DOCLIGNE>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("API_V_DOCLIGNE");

                entity.Property(e => e.AC_RefClient)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AF_RefFourniss)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_RefCompose)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Nom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CMUP).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_CodeTaxe1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CodeTaxe2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CodeTaxe3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_DateAvancement).HasColumnType("datetime");

                entity.Property(e => e.DL_DateBC).HasColumnType("datetime");

                entity.Property(e => e.DL_DateBL).HasColumnType("datetime");

                entity.Property(e => e.DL_DateDE).HasColumnType("datetime");

                entity.Property(e => e.DL_DatePL).HasColumnType("datetime");

                entity.Property(e => e.DL_Design)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.DL_Frais).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_NoColis)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.DL_Operation)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PUBC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PUDevise).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PUTTC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PieceBC)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PieceBL)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PieceDE)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PiecePL)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PoidsBrut).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PoidsNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PrixRU).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PrixUnitaire).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteBC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteBL).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteDE).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QtePL).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe2).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe3).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Date).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");

                entity.Property(e => e.DO_Piece)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Ref)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DomaineIntitule)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.EU_Enumere)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.MontantTVA).HasColumnType("numeric(25, 6)");

                entity.Property(e => e.PF_Num)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.PUNet).HasColumnType("numeric(38, 14)");

                entity.Property(e => e.PUTTC).HasColumnType("numeric(38, 14)");

                entity.Property(e => e.QteMvt).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.RP_Code)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Remise).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.TypeIntitule)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<API_V_TOPMVT>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("API_V_TOPMVT");

                entity.Property(e => e.AR_Design)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DL_Qte).HasColumnType("numeric(38, 6)");
            });

            modelBuilder.Entity<F_ABOENTETE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ABOENTETE_cbMarq");

                entity.Property(e => e.AE_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.AE_Coord01)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AE_Coord02)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AE_Coord03)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AE_Coord04)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AE_Cours).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AE_Ref)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.AE_TxEscompte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CA_NumIFRS)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCentrale)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeur)
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTCLIENT>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTCLIENT_cbMarq");

                entity.Property(e => e.AC_Coef).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AC_CoefNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AC_PrixDev).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AC_PrixDevNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AC_PrixVen).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AC_PrixVenNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AC_RefClient)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AC_Remise).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AC_RemiseNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTCOMPO>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTCOMPO_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AT_Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AT_Operation)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.AT_OperationChevauche)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.AT_Temps)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AT_ValeurChevauche).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.RP_Code)
                    .HasMaxLength(11)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTCOMPTA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTCOMPTA_cbMarq");

                entity.Property(e => e.ACP_ComptaCPT_CompteA)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.ACP_ComptaCPT_CompteG)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.ACP_ComptaCPT_Taxe1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ACP_ComptaCPT_Taxe2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ACP_ComptaCPT_Taxe3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ACP_ComptaCPT_TaxeAnc1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ACP_ComptaCPT_TaxeAnc2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ACP_ComptaCPT_TaxeAnc3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTENUMREF>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTENUMREF_cbMarq");

                entity.Property(e => e.AE_CodeBarre)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AE_EdiCode)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.AE_PrixAch).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AE_PrixAchNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AE_Ref)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTFOURNISS>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTFOURNISS_cbMarq");

                entity.Property(e => e.AF_CodeBarre)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AF_Colisage).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_ConvDiv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_Conversion).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_PrixAch).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_PrixAchNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_PrixDev).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_PrixDevNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_QteMini).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_RefFourniss)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AF_Remise).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AF_RemiseNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTGAMME>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTGAMME_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.EG_Enumere)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTICLE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTICLE_cbMarq");

                entity.Property(e => e.AR_CodeBarre)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_CodeFiscal)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Coef).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_CoefNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_CoutStd).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Design)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_EdiCode)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais01FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais01FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais01FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais01FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais02FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais03FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Langue1)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Langue2)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_PUNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Photo)
                    .HasMaxLength(259)
                    .IsUnicode(false);

                entity.Property(e => e.AR_PoidsBrut).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PoidsNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixAch).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixAchNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixVen).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixVenNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_QteComp).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_QteOperatoire).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat01)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat02)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat03)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat04)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat05)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Substitut)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.FA_CodeFamille)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.RP_CodeDefaut)
                    .HasMaxLength(11)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTPRIX>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTPRIX_cbMarq");

                entity.Property(e => e.AR_CoutStd).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PUNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTSTOCK>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTSTOCK_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AS_MontSto).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QteAControler).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QteCom).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QteComCM).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QteMaxi).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QteMini).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QtePrepa).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QteRes).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QteResCM).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AS_QteSto).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_ARTSTOCKEMPL>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ARTSTOCKEMPL_cbMarq");

                entity.Property(e => e.AE_QteAControler).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AE_QtePrepa).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AE_QteSto).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_BANQUE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_BANQUE_cbMarq");

                entity.Property(e => e.BQ_Abrege)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_BIC)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_CodeIdent)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_CondCommissionCC_Taux).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondDecouvertCD_Plafond01CD_Marge).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondDecouvertCD_Plafond01CD_ValeurPlafond).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondDecouvertCD_Plafond02CD_Marge).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondDecouvertCD_Plafond02CD_ValeurPlafond).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondDecouvertCD_ValeurTaux).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondFraisCF_Commission).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondFraisCF_Compte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondFraisCF_MaximumPercu).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondFraisCF_MinimumPercu).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondFraisCF_MontantVariableHT).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondFraisCF_SeuilCrediteur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondFraisCF_SeuilExoneration).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_CondInteretCI_Taux).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.BQ_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_DaillyAdresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_DaillyCodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_DaillyComplement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_DaillyNatJur)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_DaillyRCS)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_DaillyVille)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_DelaiHeure01DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure01DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure02DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure02DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure03DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure03DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure04DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure04DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure05DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure05DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure06DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure06DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure07DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure07DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure08DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure08DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure09DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure09DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure10DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure10DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure11DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure11DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure12DH_HeureFichier)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_DelaiHeure12DH_HeureTeletrans)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BQ_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_ModeleParam)
                    .HasMaxLength(259)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_Site)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_TransEMailEnvoi)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_TransSite)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_VTCodeService)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumFraisOPCVM)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumMoinsValueOPCVM)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumPlusValueOPCVM)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumTVAOPCVM)
                    .HasMaxLength(13)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_BANQUET>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_BANQUET_cbMarq");

                entity.Property(e => e.BT_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BT_BIC)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Banque)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Cle)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.BT_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.BT_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Commentaire)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Compte)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Guichet)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.BT_IBAN)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BT_NomAgence)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BT_PaysAgence)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BT_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_CAISSE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_CAISSE_cbMarq");

                entity.Property(e => e.CA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.JO_Num)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_CATALOGUE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_CATALOGUE_cbMarq");

                entity.Property(e => e.CL_Code)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CL_Intitule)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_COLLABORATEUR>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_COLLABORATEUR_cbMarq");

                entity.Property(e => e.CO_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CO_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Fonction)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Matricule)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Nom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Prenom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Service)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_TelPortable)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_COMPTEA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_COMPTEA_cbMarq");

                entity.Property(e => e.CA_Achat).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CA_Classement)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Vente).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_COMPTEG>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_COMPTEG_cbMarq");

                entity.Property(e => e.CG_Classement)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CR_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.TA_Code)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_COMPTEGA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_COMPTEGA_cbMarq");

                entity.Property(e => e.CA_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_AVRepart).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CG_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_COMPTER>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_COMPTER_cbMarq");

                entity.Property(e => e.CR_Classement)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CR_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CR_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_COMPTET>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_COMPTET_cbMarq");

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CA_NumIFRS)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumPrinc)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Ape)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Assurance).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Classement)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CT_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Coface)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Commentaire)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CT_EdiCode)
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.CT_EdiCodeSage)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Encours).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Identifiant)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_LangueISO2)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCentrale)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeur)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Qualite)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CT_RepresentInt)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_RepresentNIF)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Siret)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Site)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique01)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique02)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique03)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique04)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique05)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique06)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique07)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique08)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique09)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique10)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvCA).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_SvCotation)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvEffectif)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvFormeJuri)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvObjetMaj)
                    .HasMaxLength(61)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvRegul)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvResultat).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux01).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux02).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux03).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux04).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_COMPTETG>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_COMPTETG_cbMarq");

                entity.Property(e => e.CG_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_CONTACTT>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_CONTACTT_cbMarq");

                entity.Property(e => e.CT_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Fonction)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Nom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Prenom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_TelPortable)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_CREGLEMENT>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_CREGLEMENT_cbMarq");

                entity.Property(e => e.CG_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumCont)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumEcart)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeur)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeurOrig)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.JO_Num)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumEcart)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.RG_Cours).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.RG_Date).HasColumnType("datetime");

                entity.Property(e => e.RG_DateEchCont).HasColumnType("datetime");

                entity.Property(e => e.RG_Heure)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RG_Impaye).HasColumnType("datetime");

                entity.Property(e => e.RG_Libelle)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.RG_Montant).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.RG_MontantDev).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.RG_MontantEcart).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.RG_Piece)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.RG_Reference)
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_DEPOT>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DEPOT_cbMarq");

                entity.Property(e => e.DE_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Code)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DE_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DE_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Intitule)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Region)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.DE_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_DEPOTCONTACT>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DEPOTCONTACT_cbMarq");

                entity.Property(e => e.DC_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.DC_Fonction)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DC_Nom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DC_Prenom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DC_TelPortable)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.DC_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.DC_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_DEPOTEMPL>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DEPOTEMPL_cbMarq");

                entity.Property(e => e.DP_Code)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.DP_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_DEPOTUSER>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DEPOTUSER_cbMarq");
            });

            modelBuilder.Entity<F_DOCCURRENTPIECE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DOCCURRENTPIECE_cbMarq");

                entity.Property(e => e.DC_Piece)
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_DOCENTETE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DOCENTETE_cbMarq");

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CA_NumIFRS)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCentrale)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeur)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_CodeTaxe1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_CodeTaxe2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_CodeTaxe3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord01)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord02)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord03)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord04)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Cours).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Date).HasColumnType("datetime");

                entity.Property(e => e.DO_DateExpedition).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivrRealisee).HasColumnType("datetime");

                entity.Property(e => e.DO_DebutAbo).HasColumnType("datetime");

                entity.Property(e => e.DO_DebutPeriod).HasColumnType("datetime");

                entity.Property(e => e.DO_Ecart).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_FactureFrs)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DO_FinAbo).HasColumnType("datetime");

                entity.Property(e => e.DO_FinPeriod).HasColumnType("datetime");

                entity.Property(e => e.DO_Heure)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DO_Motif)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.DO_NoWeb)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Piece)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DO_PieceOrig)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Ref)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Taxe1).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Taxe2).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Taxe3).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Tiers)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_TotalHT).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_TxEscompte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_ValFrais).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_ValFranco).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_DOCLIGNE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DOCLIGNE_cbMarq");

                entity.Property(e => e.AC_RefClient)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AF_RefFourniss)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_RefCompose)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CMUP).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_CodeTaxe1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CodeTaxe2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CodeTaxe3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_DateAvancement).HasColumnType("datetime");

                entity.Property(e => e.DL_DateBC).HasColumnType("datetime");

                entity.Property(e => e.DL_DateBL).HasColumnType("datetime");

                entity.Property(e => e.DL_DateDE).HasColumnType("datetime");

                entity.Property(e => e.DL_DatePL).HasColumnType("datetime");

                entity.Property(e => e.DL_Design)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.DL_Frais).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_NoColis)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.DL_Operation)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PUBC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PUDevise).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PUTTC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PieceBC)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PieceBL)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PieceDE)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PiecePL)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PoidsBrut).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PoidsNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PrixRU).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PrixUnitaire).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteBC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteBL).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteDE).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QtePL).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe2).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe3).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Date).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");

                entity.Property(e => e.DO_Piece)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Ref)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.EU_Enumere)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.PF_Num)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.RP_Code)
                    .HasMaxLength(11)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_DOCLIGNEEMPL>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DOCLIGNEEMPL_cbMarq");

                entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteAControler).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_DOCREGL>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_DOCREGL_cbMarq");

                entity.Property(e => e.DO_Piece)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DR_Date).HasColumnType("datetime");

                entity.Property(e => e.DR_Libelle)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DR_Montant).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DR_MontantDev).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DR_Pourcent).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_EBANQUE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_EBANQUE_cbMarq");

                entity.Property(e => e.EB_Abrege)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_AdresseBenef)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_BDFCodeRemettant)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.EB_BIC)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Banque)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Cle)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.EB_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.EB_CodePostalBenef)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.EB_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.EB_CodeRegionBenef)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Commentaire)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_ComplementBenef)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Compte)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Emetteur01)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Emetteur02)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Emetteur03)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.EB_FileExtrait)
                    .HasMaxLength(259)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Guichet)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.EB_IBAN)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_NomAgence)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_PaysAgence)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_PaysBenef)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_RaisonSocBenef)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_SiretBenef)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EB_TPBIC)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.EB_TPCodique)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.EB_TPIBAN)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_TPIdentifiant51)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.EB_TPServiceDepot)
                    .HasMaxLength(71)
                    .IsUnicode(false);

                entity.Property(e => e.EB_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EB_VilleBenef)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.JO_Num)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumEncaiss)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumEscompte)
                    .HasMaxLength(7)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ECRITUREA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ECRITUREA_cbMarq");

                entity.Property(e => e.CA_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.EA_Montant).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.EA_Quantite).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_ECRITUREC>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ECRITUREC_cbMarq");

                entity.Property(e => e.CG_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumCont)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCont)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.EC_Date).HasColumnType("datetime");

                entity.Property(e => e.EC_DateCloture).HasColumnType("datetime");

                entity.Property(e => e.EC_DateOp).HasColumnType("datetime");

                entity.Property(e => e.EC_DatePenal).HasColumnType("datetime");

                entity.Property(e => e.EC_DateRappro).HasColumnType("datetime");

                entity.Property(e => e.EC_DateRegle).HasColumnType("datetime");

                entity.Property(e => e.EC_DateRelance).HasColumnType("datetime");

                entity.Property(e => e.EC_Devise).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.EC_Echeance).HasColumnType("datetime");

                entity.Property(e => e.EC_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EC_Lettrage)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.EC_LettrageQ)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.EC_Montant).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.EC_MontantRegle).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.EC_Parite).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.EC_Piece)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.EC_Pointage)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.EC_Quantite).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.EC_RefPiece)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.EC_Reference)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.EC_TresoPiece)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.JM_Date).HasColumnType("datetime");

                entity.Property(e => e.JO_Num)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.TA_Code)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ECRITUREF>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ECRITUREF_cbMarq");

                entity.Property(e => e.CG_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.EF_Date).HasColumnType("datetime");

                entity.Property(e => e.EF_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EF_Montant).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.EF_Piece)
                    .HasMaxLength(13)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ECRITURER>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ECRITURER_cbMarq");

                entity.Property(e => e.CA_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.ER_Date).HasColumnType("datetime");

                entity.Property(e => e.ER_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.ER_MontantA).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.ER_Piece)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.ER_QuantiteA).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.ER_RefPiece)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.JA_Num)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ENUMCOND>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ENUMCOND_cbMarq");

                entity.Property(e => e.EC_EdiCode)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.EC_Enumere)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.EC_Quantite).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_ENUMGAMME>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_ENUMGAMME_cbMarq");

                entity.Property(e => e.EG_BorneSup).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.EG_Enumere)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_FAMCLIENT>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_FAMCLIENT_cbMarq");

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.FA_CodeFamille)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.FC_Remise).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_FAMCOMPTA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_FAMCOMPTA_cbMarq");

                entity.Property(e => e.FA_CodeFamille)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.FCP_ComptaCPT_CompteA)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.FCP_ComptaCPT_CompteG)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.FCP_ComptaCPT_Date1).HasColumnType("datetime");

                entity.Property(e => e.FCP_ComptaCPT_Date2).HasColumnType("datetime");

                entity.Property(e => e.FCP_ComptaCPT_Date3).HasColumnType("datetime");

                entity.Property(e => e.FCP_ComptaCPT_Taxe1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FCP_ComptaCPT_Taxe2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FCP_ComptaCPT_Taxe3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FCP_ComptaCPT_TaxeAnc1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FCP_ComptaCPT_TaxeAnc2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FCP_ComptaCPT_TaxeAnc3)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_FAMFOURNISS>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_FAMFOURNISS_cbMarq");

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.FA_CodeFamille)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.FF_Colisage).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FF_ConvDiv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FF_Conversion).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FF_QteMini).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FF_Remise).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_FAMILLE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_FAMILLE_cbMarq");

                entity.Property(e => e.FA_Central)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.FA_CodeFamille)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.FA_CodeFiscal)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Coef).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais01FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Frais01FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais01FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais01FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais02FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Frais02FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais02FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais02FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais03FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Frais03FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais03FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Frais03FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.FA_RacineCB)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.FA_RacineRef)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Stat01)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Stat02)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Stat03)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Stat04)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.FA_Stat05)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_FAMTARIF>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_FAMTARIF_cbMarq");

                entity.Property(e => e.FA_CodeFamille)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.FT_Coef).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FT_Remise).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_GAMSTOCK>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_GAMSTOCK_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.GS_MontSto).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QteAControler).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QteCom).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QteComCM).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QteMaxi).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QteMini).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QtePrepa).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QteRes).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QteResCM).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GS_QteSto).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_GAMSTOCKEMPL>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_GAMSTOCKEMPL_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.GE_QteAControler).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GE_QtePrepa).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.GE_QteSto).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_JMOUV>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_JMOUV_cbMarq");

                entity.Property(e => e.JM_Date).HasColumnType("datetime");

                entity.Property(e => e.JO_Num)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_JOURNAUX>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_JOURNAUX_cbMarq");

                entity.Property(e => e.CG_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.JO_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.JO_Num)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_JOURNAUXA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_JOURNAUXA_cbMarq");

                entity.Property(e => e.JA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.JA_Num)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_LIVRAISON>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_LIVRAISON_cbMarq");

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.LI_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.LI_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.LI_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.LI_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.LI_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.LI_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.LI_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.LI_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.LI_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.LI_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.LI_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_LOTFIFO>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_LOTFIFO_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.LF_DateBL).HasColumnType("datetime");

                entity.Property(e => e.LF_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.LF_QteRestant).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_LOTSERIE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_LOTSERIE_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.LS_Complement)
                    .HasMaxLength(31)
                    .IsUnicode(false);

                entity.Property(e => e.LS_Fabrication).HasColumnType("datetime");

                entity.Property(e => e.LS_NoSerie)
                    .HasMaxLength(31)
                    .IsUnicode(false);

                entity.Property(e => e.LS_Peremption).HasColumnType("datetime");

                entity.Property(e => e.LS_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.LS_QteRes).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.LS_QteRestant).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_NOMENCLAT>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_NOMENCLAT_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.NO_Commentaire)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.NO_Operation)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.NO_RefDet)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.NO_Repartition).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_PAYS>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_PAYS_cbMarq");

                entity.Property(e => e.PA_Assurance).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.PA_Code)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.PA_CodeEdi)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.PA_CodeISO2)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.PA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PA_Transport).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_PIECE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_PIECE_cbMarq");

                entity.Property(e => e.JO_Num)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.PI_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PI_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_PIECEA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_PIECEA_cbMarq");

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.PA_VMontant).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.PA_VQuantite).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_PIECEG>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_PIECEG_cbMarq");

                entity.Property(e => e.CG_Num)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumCont)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCont)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Devise)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Echeance)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL01)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL02)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL03)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL04)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL05)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL06)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL07)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL08)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL09)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL10)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL11)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL12)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL13)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL14)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL15)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL16)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL17)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL18)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL19)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL20)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL21)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL22)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL23)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL24)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL25)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL26)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL27)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL28)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL29)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL30)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL31)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL32)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL33)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL34)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL35)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL36)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL37)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL38)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL39)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL40)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL41)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL42)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL43)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL44)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL45)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL46)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL47)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL48)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL49)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL50)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL51)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL52)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL53)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL54)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL55)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL56)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL57)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL58)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL59)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL60)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL61)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL62)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL63)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_InfoL64)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Jour)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Montant)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Parite)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Piece)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Quantite)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_RefPiece)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PG_Reference)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.TA_Code)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_PROTECTIONCIAL>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_PROTECTIONCIAL_cbMarq");

                entity.Property(e => e.PROT_DatePwd).HasColumnType("datetime");

                entity.Property(e => e.PROT_Description)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PROT_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.PROT_LastLoginDate).HasColumnType("datetime");

                entity.Property(e => e.PROT_LastLoginTime)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PROT_User)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_PROTECTIONCPTA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_PROTECTIONCPTA_cbMarq");

                entity.Property(e => e.PROT_DatePwd).HasColumnType("datetime");

                entity.Property(e => e.PROT_Description)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PROT_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.PROT_LastLoginDate).HasColumnType("datetime");

                entity.Property(e => e.PROT_LastLoginTime)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PROT_User)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_REGLEARCHIVE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_REGLEARCHIVE_cbMarq");

                entity.Property(e => e.RA_Date).HasColumnType("datetime");

                entity.Property(e => e.RA_Montant).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.RA_MontantDev).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.TA_Piece)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_REGLECH>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_REGLECH_cbMarq");

                entity.Property(e => e.DO_Piece)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.RC_Montant).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_REGLEMENTT>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_REGLEMENTT_cbMarq");

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.RT_VRepart).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_TARIF>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_TARIF_cbMarq");

                entity.Property(e => e.AR_Ref)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.TF_Debut).HasColumnType("datetime");

                entity.Property(e => e.TF_Fin).HasColumnType("datetime");

                entity.Property(e => e.TF_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.TF_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.TF_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.TF_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<F_TAXE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_F_TAXE_cbMarq");

                entity.Property(e => e.CG_Num)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.TA_Assujet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.TA_Code)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.TA_EdiCode)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.TA_GrilleBase)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.TA_GrilleTaxe)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.TA_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.TA_Regroup)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.TA_Taux).HasColumnType("numeric(24, 6)");
            });

            modelBuilder.Entity<P_CATCOMPTA>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_P_CATCOMPTA_cbMarq");

                entity.Property(e => e.CA_ComptaAch01)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch02)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch03)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch04)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch05)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch06)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch07)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch08)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch09)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch10)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch11)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch12)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch13)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch14)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch15)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch16)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch17)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch18)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch19)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch20)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch21)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch22)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch23)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch24)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch25)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch26)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch27)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch28)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch29)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch30)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch31)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch32)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch33)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch34)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch35)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch36)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch37)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch38)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch39)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch40)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch41)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch42)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch43)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch44)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch45)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch46)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch47)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch48)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch49)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaAch50)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto01)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto02)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto03)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto04)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto05)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto06)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto07)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto08)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto09)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto10)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto11)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto12)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto13)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto14)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto15)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto16)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto17)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto18)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto19)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto20)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto21)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto22)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto23)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto24)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto25)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto26)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto27)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto28)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto29)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto30)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto31)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto32)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto33)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto34)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto35)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto36)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto37)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto38)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto39)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto40)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto41)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto42)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto43)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto44)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto45)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto46)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto47)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto48)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto49)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaSto50)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen01)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen02)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen03)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen04)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen05)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen06)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen07)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen08)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen09)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen10)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen11)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen12)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen13)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen14)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen15)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen16)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen17)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen18)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen19)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen20)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen21)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen22)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen23)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen24)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen25)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen26)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen27)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen28)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen29)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen30)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen31)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen32)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen33)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen34)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen35)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen36)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen37)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen38)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen39)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen40)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen41)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen42)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen43)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen44)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen45)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen46)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen47)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen48)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen49)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CA_ComptaVen50)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<P_DOSSIER>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_P_DOSSIER_cbMarq");

                entity.Property(e => e.CG_NumANBenef)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumANOuv)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumANPerte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumImportCredit)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumImportDebit)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumRappro)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.D_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.D_Ape)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.D_ArchivePeriod).HasColumnType("datetime");

                entity.Property(e => e.D_Capital).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.D_CloturePeriod).HasColumnType("datetime");

                entity.Property(e => e.D_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.D_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.D_ComCodeExpert)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.D_ComDateSynchro).HasColumnType("datetime");

                entity.Property(e => e.D_Commentaire)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.D_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.D_DateClot).HasColumnType("datetime");

                entity.Property(e => e.D_DebutExo01).HasColumnType("datetime");

                entity.Property(e => e.D_DebutExo02).HasColumnType("datetime");

                entity.Property(e => e.D_DebutExo03).HasColumnType("datetime");

                entity.Property(e => e.D_DebutExo04).HasColumnType("datetime");

                entity.Property(e => e.D_DebutExo05).HasColumnType("datetime");

                entity.Property(e => e.D_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.D_EMailExpert)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.D_EMailSoc)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.D_Expert)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.D_FinExo01).HasColumnType("datetime");

                entity.Property(e => e.D_FinExo02).HasColumnType("datetime");

                entity.Property(e => e.D_FinExo03).HasColumnType("datetime");

                entity.Property(e => e.D_FinExo04).HasColumnType("datetime");

                entity.Property(e => e.D_FinExo05).HasColumnType("datetime");

                entity.Property(e => e.D_ForfaitImpayes).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.D_FormatQtes)
                    .HasMaxLength(31)
                    .IsUnicode(false);

                entity.Property(e => e.D_FormeJuridique)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.D_Identifiant)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.D_NumDoss)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.D_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.D_PenalTaux).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.D_Profession)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.D_RaisonSoc)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.D_RappelSoldeMin).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.D_RapproEcart).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.D_SeuilTVA).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.D_Siret)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.D_Site)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.D_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.D_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.D_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.JA_NumAN)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JA_NumANIFRS)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumAN)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumANIFRS)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumImpayes)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumPenal)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumRapproEscCl)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.JO_NumRapproEscFr)
                    .HasMaxLength(7)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<P_DOSSIERCIAL>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_P_DOSSIERCIAL_cbMarq");

                entity.Property(e => e.D_ArchivePeriod).HasColumnType("datetime");

                entity.Property(e => e.D_FormatPrix)
                    .HasMaxLength(31)
                    .IsUnicode(false);

                entity.Property(e => e.D_FormatQte)
                    .HasMaxLength(31)
                    .IsUnicode(false);

                entity.Property(e => e.D_RaisonS)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<P_GAMME>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_P_GAMME_cbMarq");

                entity.Property(e => e.G_Intitule)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<P_INTERNE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_P_INTERNE_cbMarq");

                entity.Property(e => e.D_Intitule)
                    .HasMaxLength(65)
                    .IsUnicode(false);

                entity.Property(e => e.D_LibelleConfirme)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.D_LibelleSaisie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.D_LibelleValide)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<P_TIERS>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("Pk_P_TIERS_cbMarq");

                entity.Property(e => e.T_Racine)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val01T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val01T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val02T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val02T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val03T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val03T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val04T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val04T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val05T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val05T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val06T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val06T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val07T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val07T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val08T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val08T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val09T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val09T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val10T_Compte)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.T_Val10T_Intitule)
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<P_UNITE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("PK_CBMARQ_P_UNITE");

                entity.Property(e => e.U_EdiCode)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.U_Intitule)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}